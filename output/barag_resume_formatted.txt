                                                         Seattle-ish, WA  ~/
   +----------+                                           +1215-380-8844   #
   |Sean Barag|                                           sean@barag.org   @
   +----------+                               https://github.com/sjbarag  <>

--------------------------------------------------------------------------------

EXPERIENCE
      Oct 2021  o  Cockroach Labs in NYC (Remote)
     - Present  |  Senior Software Developer with Cloud & Developer
                |  Experiences
                |    * Responsible for UI development tools, CI/CD infra, build
                |      systems (Bazel and node-native)
                |    * Built automatic preview deployments for all UI PRs
                |      (~self-hosted Vercel)
                |    * Benchmarked JSON vs multiple protobuf clients with real-
                |      world payloads in all major browsers
                |    * Reduced CockroachDB UI build times by > 3 minutes
                |    * Set up real-user monitoring and structured error logging
                |      in SaaS UI
                |    * Maintained React + Redux SaaS web UI
                |
      Mar 2020  o  Hulu in Seattle, WA
    - Oct 2021  |  Principal Software Developer with Living Room
                |    * Led team of 7 devs through complete UI rewrite, from
                |      prototyping to launch
                |    * Implemented Redux pattern in Roku ecosystem
                |    * Continued public maintenance of Hulu open-source
                |      projects (brs, roca, linter)
                |    * Integrated OSS browser automation framework for webapp
                |      UI testing
                |    * Formal mentor to two other devs
                |
      Mar 2018  o  Hulu in Seattle, WA
    - Mar 2020  |  Senior Software Developer with Living Room
                |    * Maintained Hulu app on Roku, written in Roku-proprietary
                |      language
                |    * Led team of 5 devs to launch Hulu on Amazon Echo Show
                |    * Released splitshot (see open-source contributions) to
                |      the public, including Hulu Tech Blog post
                |    * Integrated device-free unit testing for Roku app
                |    * Became internal point of contact for all Hulu open-
                |      source releases
                |
      Mar 2016  o  Hulu in Seattle, WA
    - Mar 2018  |  Software Developer with Living Room
                |    * Maintained HTML/CSS/JS Hulu app on consoles, smart TVs,
                |      etc.
                |    * Worked with team of 4 to launch profiles support in HTML
                |      app
                |    * Embedded with backend team to build initial version of
                |      client-facing content API for live TV
                |    * Investigated app performance for Hulu with Live TV
                |      launch
                |    * Implemented view-model pattern in backend and in Hulu on
                |      Roku
                |
      Apr 2015  o  Amazon.com in Seattle, WA
    - Mar 2016  |  Software Development Engineer II with Marketplace Shipping
                |  Services
                |    * Designed, implemented, and launched public API to
                |      purchase shipping labels for orders
                |    * Supported external users during six months of private
                |      beta of shipping label web service
                |    * Coordinated team of six developers working
                |      simultaneously in new codebase
                |    * Supported and advised team of India-based developers for
                |      contributions to my team's codebase
                |
      Aug 2013  o  Amazon.com in Seattle, WA
    - Apr 2015  |  Software Development Engineer I with Marketplace Shipping
                |  Services
                |    * Reduced fatal errors from 1,100 per million requests to
                |      200
                |    * Contributed to internal tools to read and transform log
                |      data
                |    * Developed and maintained Java service capable of
                |      processing ~1,000 requests per-second (peak)
                |    * Designed async workflow-based service to buy up to 500
                |      shipping labels & merge into one PDF
                |
      Sep 2012  o  Drexel University Capstone Project in Philadelphia, PA
    - Jun 2013  |  Embedded Software Developer with Waterproof Recording
                |  Ammeter
                |    * Designed supporting circuits for PIC 18F microontroller
                |      and sensors
                |    * Implemented I2C sensor readings via vendor library
                |    * Implemented data persistence on SD card via SPI via
                |      vendor library
                |    * Built USB serial support for configuration via PC


NOTABLE SIDE PROJECTS

      Feb 2023  o  caiac - Code as Infrastructure as Code
                |    * Goal:   Have a laugh by writing a Terraform provider
                |              that models the Go AST and emits .go files
                |    * Status: Published POC and frozen
                |    * https://github.com/sjbarag/caiac
                |
      Oct 2020  o  thcon - A command-line tool + config file that switches
                |  themes in many apps
                |    * Goal:   Ease eye-strain by toggling dark mode in
                |              multiple tools with fewer steps
                |    * Status: Published and actively maintained
                |    * https://thcon.app
                |
      Dec 2017  o  brs - BrightScript interpreter implemented in TypeScript
                |    * Goal:   Enable off-device testing by implementing
                |              (from-scratch) the language Roku apps are
                |              written in
                |    * Status: In use but frozen; forked by Roku dev community
                |    * https://github.com/sjbarag/brs
                |
      Aug 2015  o  PNRG (Poorly Named Resume Generator) - Templated resume
                |  source generator
                |    * Goal:   Reduce effort required to maintain multiple
                |              parallel resume formats
                |    * Status: Frozen; updated as-needed
                |    * https://github.com/sjbarag/poorly-named-resume-generator


NOTABLE OPEN-SOURCE CONTRIBUTIONS

                o  git - Added support for clone.defaultRemoteName config
                |    * Status: Submitted and released in 2.30
                |    * https://github.com/git/git/compare/54e85e7af1...de9ed3ef37
                |
                o  roca - Roku unit testing framework implemented on top of
                |  brs
                |    * Status: Developed in public and released; abandoned by
                |              Hulu after I left
                |    * https://github.com/hulu/roca
                |
                o  splitshot - Generates TypeScript declarations from
                |  CoffeeScript sources
                |    * Status: Developed internally, released, frozen
                |    * https://github.com/hulu/splitshot
                |
                o  TypeScript - Automatically inherit JSDoc comments in
                |  subclasses and subinterfaces
                |    * Status: Submitted and released in 2.7
                |    * https://github.com/microsoft/TypeScript/pull/18804


SKILLS

                 Languages:
                     * Bash/POSIX shells
                     * Docker (as needed)
                     * Go
                     * JavaScript / TypeScript
                     * LaTeX
                     * Python
                     * Rust (still learning)

                 Tools:
                     * AWS S3, DyamoDB, SQS, SNS, Lambda
                     * Bazel
                     * git
                     * HTTP debugging proxies (Charles, Proxyman)
                     * Kubernetes (as needed)
                     * React/Redux
                     * Terraform

                 Particularly Excited About:
                     * Building simple, powerful tooling
                     * Debugging (weird bugs are fun!)
                     * Fast, reliable, understandable tests
                     * Helping developers grow
                     * Performance optimization

                 Paradigms:
                     * Custom linters
                     * Distributed systems
                     * HTML Single-Page Apps (SPA)
                     * HTTP REST (client and server)
                     * Language interpreters



              Generated with PNRG (Poorly Named Resume Generator)               